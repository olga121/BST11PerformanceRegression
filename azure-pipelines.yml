# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

resources:
  repositories:
  - repository: self
    type: git
    name: BST11 Performance Regression
    
name: Release-$(Rev:r)

parameters:
  - name: run_RestoreDatabase
    displayName: Run_Restore_Database
    type: boolean
    default: True
  - name: backupDirectory
    displayName: Backup_Directory
    default: E:\MSSQL\Backup\4.0.0.833
  - name: backupFileName
    displayName: Backup_File_Name
    default: DevDB_4.0.0.833.bak
  - name: run_CleaningScripts
    displayName: Run_Prebills_cleaning
    type: boolean
    default: True
  - name: run_RebuildIndexes
    displayName: Rebuild_Indexes
    type: boolean
    default: True
  - name: update_Statistics
    displayName: Update_Statistics
    type: boolean
    default: True
  - name: run_PrebillsFinalBillsGeneration
    displayName: Run_Prebills/FinalBills_Generation
    type: boolean
    default: True
  - name: template
    displayName: Template 
    default: SmallFirm-LSV17_18.json
    values: 
     - SmallFirm-LSV17_18.json
     - SmallFirm-LSV09_08.json
     - -- placeholder--
  - name: dbName
    displayName: OLTP_Database 
    default: DevDB
    values:
     - DevDB
     - CNL
  - name: trigger_notes
    type: string
    default: 1000 Prebills Generation
  - name: iterations
    displayName: Number_of_Iterations
    default: 1
  - name: Test_scenario
    displayName: Test_Scenario
    default: 1000PrebillsGeneration
    values:
     - 1000PrebillsGeneration
     - 100_Small_to_Average_PrebillsGeneration
     - 100_Small_to_Large_PrebillsGeneration
     - 100FinalBillsGeneration
  - name: CollectAzureMetrics
    displayName: Collect_AzureMe_Metrics
    type: boolean
    default: True
  


variables:
- group: Secret_variables
- name: Cleaning_DocumentNbr_Like
  value: 'DGEN'
- name:  Cleaning_RebuildIndexes
  value: '0'
- name:  Cleaning_UpdateStatistics
  value: '0'
- name:  Cleaning_FromDatagenOnly
  value: '0' 

jobs:
#############
# SetUp Stage
#############
- job:  SetUpStage  
  displayName: SetUp_Stage
  steps: 
  - checkout: self
    path: self
  - download: none
    continueOnError: false

# RESTORE DATABASE
  - task: PowerShell@2
    displayName: 'Restore Database running'
    condition: and(not(canceled()), ${{ eq(parameters.run_RestoreDatabase, true) }}) 
    inputs:
     targetType: 'filePath'
     filePath: '$(Agent.BuildDirectory)/self/Utility/SQL_RestoreDatabase.ps1'
     arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)" -backupDirectory "$(parameters.backupDirectory)" -backUpFileName "$(parameters.backupFileName)' #-User "$(User)" -Password "$(Password)"
     pwsh: true

# CLEAN PREBILLS/FINAL BILLS
  - task: PowerShell@2
    displayName: 'Clean Prebills/Final Bills'
    condition: and(not(canceled()), ${{ eq(parameters.run_CleaningScripts, true) }})
    inputs:
     targetType: 'filePath'
     filePath: '$(Agent.BuildDirectory)/self/Utility/SQL_CleanPrebillsFinalBills.ps1'
     arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
     pwsh: true

# REBUILD INDEXES
  - task: PowerShell@2
    displayName: 'Rebuild Indexes'
    condition: and(not(canceled()), ${{ eq(parameters.run_RebuildIndexes, true) }})
    inputs: 
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/Utility/SQL_RebuildIndexes.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
      pwsh: true

# UPDATE STATISTICS
  - task: PowerShell@2
    displayName: 'Update Statiscis'
    condition: and(not(canceled()), ${{ eq(parameters.update_Statistics, true) }})
    inputs: 
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/SQL_UpdateStatistics.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
      pwsh: true

#########################
# RUN Prebills/FinalBills Generation
#########################
- job: PrebillsFinalBillsGeneration
  displayName: Generate Prebills/Finalbills
  condition: and(not(canceled()), ${{ eq(parameters.run_PrebillsFinalBillsGeneration, true) }})
  dependsOn:
  - SetUpStage
  steps: 
  - checkout: self
    path: self
  - download: none
    continueOnError: false

# 1000 Prebills Generation
  - task: PowerShell@2
    displayName: 1000_Prebills_Generation
    condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '1000 Prebills Generation') }})
    inputs:
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/PrebillProcess/SQL_PrebillsGeneration.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(PB1000-1_Valid)"'
      pwsh: true

# 100_Small_to_Average_Prebills 
  - task: PowerShell@2
    displayName: '100_Small_to_Average_PrebillsGeneration'
    condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '100_Small_to_Average_PrebillsGeneration') }})
    inputs:
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/PrebillProcess/SQL_PrebillsGeneration.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(PB100-01)" '
      pwsh: true

# 100_Small_to_Large_Prebills
  - task: PowerShell@2
    displayName: '100_Small_to_Large_PrebillsGeneration'
    condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '100_Small_to_Large_PrebillsGeneration') }})
    inputs:
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/PrebillProcess/SQL_PrebillsGeneration.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(PB100-07)" '
      pwsh: true

# 100 FinalBills Generation
  - task: PowerShell@2
    displayName: '100 FinalBills Generation'
    condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '100FinalBillsGeneration') }})
    inputs:
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/PrebillProcess/SQL_FinalBillsGeneration.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(FB100-01)" -RequiredState "$(Submit)" '
      pwsh: true

############## 
# Collect Metrics
###############
- job: CollectMetrics
  displayName: Collect Azure Metrics 
  condition: and(not(canceled()), ${{ eq(parameters.CollectAzureMetrics, true) }})
  dependsOn:
  - PrebillsFinalBillsGeneration
  steps:
  - checkout: self
    path: self
  - download: none
    continueOnError: false 

  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/self/PrebillProcess/SQL_CollectAzureMetrics.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -ClientDBName "$(parameters.dbName)" -startTime  "$(collect_azure_metrics_startTime)" -endTime  "$(collect_azure_metrics_endTime)" -testName  "${{ parameters.Test_scenario }}" '
      pwsh: true

