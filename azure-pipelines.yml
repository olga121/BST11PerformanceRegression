# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

resources:
  repositories:
  - repository: perf
    type: git
    name: BST11 Performance Regression

name: Release-$(Rev:r)

parameters:
  - name: run_RestoreDatabase
    displayName: Run Restore Database
    type: boolean
    default: True
  - name: run_CleaningScripts
    displayName: Run Prebills cleaning
    type: boolean
    default: True
  - name: run_RebuildIndexes
    displayName: Rebuild Indexes
    type: boolean
    default: True
  - name: update_Statistics
    displayName: Update Statistics
    type: boolean
    default: True
  - name: run_PrebillsFinalBillsGeneration
    displayName: Run Prebills/FinalBills Generation
    type: boolean
    default: True
  - name: template
    displayName: Template 
    default: SmallFirm-LSV17_18.json
    values: 
     - SmallFirm-LSV17_18.json
     - SmallFirm-LSV09_08.json
     - SmallFirm-LSV21_23.json
     - SmallFirm-LSV10_11.json
  - name: dbName
    dispayName: OLTP Database 
    default: DevDB
    values:
     - DevDB
     - CNL
  - name: trigger_notes
    type: string
    default: 1000 Prebills Generation
  - name: iterations
    dispalyName: Number of Iterations
    default: 1
  - name: Test_scenario
    displayName: Test Scenario
    default: 1000PrebillsGeneration
    values:
     - 1000PrebillsGeneration
     - 100_Small_to_Average_PrebillsGeneration
     - 100_Small_to_Large_PrebillsGeneration
     - 100FinalBillsGeneration
  - name: CollectAzureMetrics
    displayName: Collect AzureMe trics
    type: boolean
    default: True
  


variables:
- name: Cleaning_DocumentNbr_Like
  displayName: 'DocumentNbr_Like when Cleaning documents'
  type: string
  default: 'DGEN'
- name:  Cleaning_RebuildIndexes
  displayName: 'RebuildIndexes when Cleaning? 1 - Yes, 0 - No'
  type: strign
  default: '0'
- name:  Cleaning_UpdateStatistics
  displayName: 'UpdateStatistics when Cleaning? 1 - Yes, 0 - No'
  type: strign
  default: '0'
- name:  Cleaning_FromDatagenOnly
  displayName: 'FromDatagenOnly when Cleaning? 1 - Yes, 0 - No'
  type: strign
  default: '0' 



stages:
#############
# SetUp Stage
#############
- stage:  SetUP Stage  
  displayName: SetUp Stage  

  jobs:
  - job: RestoreDatabase
    displayName: Restoring Database
    condition: and(not(canceled()), ${{ eq(parameters.run_RestoreDatabase, true) }})
    steps: 
    - task: PowerShell@2
      displayName: 'Restore Database running'
      inputs: 
        targetType: 'filePath'
        filePath: '$(Agent.BuildDirectory)/perf/Utility/SQL_RestoreDatabase.ps1'
        arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
        pwsh: true

  - job: CleanPrebillsFinalBills
    displayName: 'Clean Prebills/Final Bills'
    condition: and(not(canceled()), ${{ eq(parameters.run_CleaningScripts, true) }})
    steps: 
    - task: PowerShell@2
      displayName: 'Clean Prebills and Final Bills running'
      inputs: 
        targetType: 'filePath'
        filePath: '$(Agent.BuildDirectory)/perf/Utility/SQL_CleanPrebillsFinalBills.ps1'
        arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
        pwsh: true

  - job: RebuildIndexes
    displayName: ' Rebuild Indexes'
    condition: and(not(canceled()), ${{ eq(parameters.run_RebuildIndexes, true) }})
    steps:
    - task: PowerShell@2
      displayName: 'Rebuild Indexes running'
      inputs: 
        targetType: 'filePath'
        filePath: '$(Agent.BuildDirectory)/perf/Utility/SQL_RebuildIndexes.ps1'
        arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
        pwsh: true

  - job: UpdateStatistics
    displayName: 'Update Statiscis'
    condition: and(not(canceled()), ${{ eq(parameters.update_Statistics, true) }})
    steps:
    - task: PowerShell@2
      displayName: 'Update Statistics running'
      inputs: 
        targetType: 'filePath'
        filePath: '$(Agent.BuildDirectory)/perf/Utility/SQL_UpdateStatistics.ps1'
        arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.template)"'
        pwsh: true

#########################
# RUN Prebills/FinalBills Generation
#########################
- stage: Generate Prebills/Finalbills
  displayName: 'Generate Prebills/Finalbills'
  condition: and(not(canceled()), ${{ eq(parameters.run_PrebillsFinalBillsGeneration, true) }})

  jobs:
  - job: 1000PrebillsGeneration
    condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '1000 Prebills Generation') }})
    steps:
    - task: PowerShell@2
      displayName: '1000 Prebills Generation'
      inputs:
        targetType: 'filePath'
        filePath: '$(Agent.BuildDirectory)/perf/PrebillProcess/SQL_PrebillsGeneration.ps1'
        arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(PB1000-1_Valid)"'
        pwsh: true

    - job: 100_Small_to_Average_PrebillsGeneration
      condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '100_Small_to_Average_PrebillsGeneration') }})
      steps:
      - task: PowerShell@2
        displayName: '100_Small_to_Average_PrebillsGeneration'
        inputs:
          targetType: 'filePath'
          filePath: '$(Agent.BuildDirectory)/perf/PrebillProcess/SQL_PrebillsGeneration.ps1'
          arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(PB100-01)" '
          pwsh: true

    - job: 100_Small_to_Large_PrebillsGeneration
      condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '100_Small_to_Large_PrebillsGeneration') }})
      steps:
      - task: PowerShell@2
        displayName: '100_Small_to_Large_PrebillsGeneration'
        inputs:
          targetType: 'filePath'
          filePath: '$(Agent.BuildDirectory)/perf/PrebillProcess/SQL_PrebillsGeneration.ps1'
          arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(PB100-07)" '
          pwsh: true

    - job: 100FinalBillsGeneration
      condition: and(not(canceled()), ${{ eq(parameters.Test_scenario, '100FinalBillsGeneration') }})
      steps:
      - task: PowerShell@2
        displayName: '100 FinalBills Generation'
        inputs:
          targetType: 'filePath'
          filePath: '$(Agent.BuildDirectory)/perf/PrebillProcess/SQL_FinalBillsGeneration.ps1'
          arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -TemplateFile "$(parameters.Template)" -TestScenario "parameters.Test_scenario" -DocumentNbr_From "$(FB100-01)" -RequiredState "$(Submit)" '
          pwsh: true

############## 
# Collect Metrics
###############
- stage: CollectAzureMetrics
  displayName: Collect Azure Metrics 
  condition: and(not(canceled()), ${{ eq(parameters.run_CollectAzureMetrics, true) }})
  steps:
  - task: PowerShell@2
    inputs:
      targetType: 'filePath'
      filePath: '$(Agent.BuildDirectory)/perf/PrebillProcess/SQL_CollectAzureMetrics.ps1'
      arguments: '-WorkspaceDirectory "$(Pipeline.Workspace)" -ClientDBName "$(parameters.dbName)" -startTime  "$(collect_azure_metrics_startTime)" -endTime  "$(collect_azure_metrics_endTime)" -testName  "${{ parameters.Test_scenario }}" '
      pwsh: true

